name: CI Workflow

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  eslint:
    runs-on: ubuntu-latest
    steps:
      # Checkout the repository code
      - name: Checkout code
        uses: actions/checkout@v4

      # Set up Node.js environment for dependencies installation and testing
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18.x"
          cache: "npm"

      # Install app and test dependencies
      - name: Install dependencies
        run: |
          npm install # Install root dependencies (test dependencies)
          cd app && npm install # Install app dependencies

        # Lint Source
      - name: Lint source code
        run: npm run lint

  dockerfile-lint:
    name: Dockerfile lint
    runs-on: ubuntu-latest
    steps:
      # https://github.com/marketplace/actions/hadolint-action
      - uses: actions/checkout@v4

      - name: Lint root Dockerfile
        uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: Dockerfile

      - name: Lint app Dockerfile
        uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: app/Dockerfile

  unit-tests:
    name: Unit tests
    runs-on: ubuntu-latest
    steps:
      # Checkout the repository code
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Node.js environment for dependencies installation and testing
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18.x"
          cache: "npm"

      # Install app and test dependencies
      - name: Install dependencies
        run: |
          npm install # Install root dependencies (test dependencies)
          cd app && npm install # Install app dependencies

      # Run tests
      - name: Run tests
        run: npm test

  docker-hub:
    name: Build and push to Docker Hub
    needs: [eslint, dockerfile-lint, unit-tests]
    runs-on: ubuntu-latest
    steps:
      # Setup docker buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Push Docker Image to DockerHub
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        env:
          DOCKERHUB_REPO: jp097/azure-terraform-sample
          SHA_TAG: sha-${{ github.sha }}
        uses: docker/build-push-action@v4
        with:
          push: true
          platforms: linux/amd64, linux/arm64
          tags: ${{ env.DOCKERHUB_REPO }}:${{ env.SHA_TAG }}, ${{ env.DOCKERHUB_REPO }}:main, ${{ env.DOCKERHUB_REPO }}:latest
